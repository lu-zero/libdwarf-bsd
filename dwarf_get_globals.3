.\" Copyright (c) 2011 Kai Wang
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id$
.\"
.Dd February 12, 2011
.Os
.Dt DWARF_GET_GLOBALS 3
.Sh NAME
.Nm dwarf_get_globals ,
.Nm dwarf_global_die_offset ,
.Nm dwarf_global_cu_offset ,
.Nm dwarf_global_name_offsets ,
.Nm dwarf_globname
.Nd retrieve information from global objects lookup table
.Sh LIBRARY
.Lb libdwarf
.Sh SYNOPSIS
.In libdwarf.h
.Ft int
.Fo dwarf_get_globals
.Fa "Dwarf_Debug dbg"
.Fa "Dwarf_Global **globals"
.Fa "Dwarf_Signed *nglobals"
.Fa "Dwarf_Error *err"
.Fc
.Ft int
.Fo dwarf_global_die_offset
.Fa "Dwarf_Global global"
.Fa "Dwarf_Off *die_offset"
.Fa "Dwarf_Error *err"
.Fc
.Ft int
.Fo dwarf_global_cu_offset
.Fa "Dwarf_Global global"
.Fa "Dwarf_Off *cu_offset"
.Fa "Dwarf_Error *err"
.Fc
.Ft int
.Fo dwarf_global_name_offsets
.Fa "Dwarf_Global global"
.Fa "char **name"
.Fa "Dwarf_Off *die_offset"
.Fa "Dwarf_Off *cu_die_offset"
.Fa "Dwarf_Error *err"
.Fc
.Ft int
.Fo dwarf_globname
.Fa "Dwarf_Global global"
.Fa "char **name"
.Fa "Dwarf_Error *err"
.Fc
.Sh DESCRIPTION
These fucntions retrieve information from global objects and functions
lookup tables found in .debug_pubnames DWARF section.
.Pp
Function
.Fn dwarf_get_globals
returns entries in the global objects lookup tables associated with DWARF
debug context referenced by argument
.Ar dbg .
Lookup table entries are returned as an array of
.Vt Dwarf_Global
descriptors.
Argument
.Ar globals
should point to a location that will hold a pointer to the returned array
of
.Vr Dwarf_Global
descriptors.
Argument
.Ar nglobals
should point to a location that will hold the number of descriptors returned.
.Pp
A
.Vt Dwarf_Global
descriptor holds information about the name and offset of a debugging
information entry that represents a global object or function.
The returned
.Vt Dwarf_Global
descriptors are opaque to the application. Each descriptor may be
passed to the other pubnames functions in the API set described below
to retrieve the name and offset information contained.
.Pp
The memory area used for the array of
.Vt Dwarf_Global
descriptors returned in argument
.Ar globals
is owned by the
.Lb libdwarf .
The application should not attempt to free this pointer.
Portable code should instead use
.Fn dwarf_globals_dealloc
to indicate that the memory may be freed.
.Pp
Function
.Fn dwarf_global_die_offset
retrieves section-relative offset of the debugging information entry refered
to by the
.Vt Dwarf_Global
descriptor denoted by the argument
.Ar global ,
and stores it in the location pointed to by the argument
.Ar die_offset .
.Pp
Function
.Fn dwarf_global_cu_offset
returns the section-relative offset of the compilation unit that contains
the debugging infomration entry refered to by the
.Vt Dwarf_Global
descriptor denoted by the argument
.Ar global .
Argument
.Ar cu_offset
should point to a location that will hold the returned offset.
.Pp
Function
.Fn dwarf_global_name_offsets
retrieves both the name and offset of the debugging information entry
refered to by the
.Vt Dwarf_Global
descritpor denoted by the argument
.Ar global .
Argument
.Ar name
should point to a location which will hold the returned NUL-terminated
string representing the name of the refered debugging information entry.
Argument
.Ar die_offset
should point to a location which will hold the returned section-relative
offset of the refered debugging information entry.
Argument
.Ar cu_die_offset
should point to a location which will hold the returned
section-relative offset of the first debugging information entry in
the same compilation unit that contains the debugging information
entry refered to by the
.Vt Dwarf_Global
descritpor.
.Pp
Function
.Fn dwarf_globname
retrieves the NUL-terminated string representing the name of the
debugging information entry refered by by the
.Vt Dwarf_Global
descritpor denoted by the argument
.Ar global ,
and stores it in the location pointed to by the argument
.Ar name .
.Pp
If argument
.Ar err
is not NULL, these functions will use it to store error information,
in case of an error.
.Sh RETURN VALUES
On success, these functions returns
.Dv DW_DLV_OK .
In case of an error, they return
.Dv DW_DLV_ERROR
and set the argument
.Ar err .
.Sh ERRORS
These functions may fail with the following errors:
.Bl -tag -width ".Bq Er DW_DLE_ARGUMENT"
.It Bq Er DW_DLE_ARGUMENT
One of the arguments
.Va cu_die_offset ,
.Va cu_offset ,
.Va dbg ,
.Va die_offset ,
.Va global ,
.Va globals ,
.Va name ,
or
.Va nglobals
was NULL.
.El
.Sh SEE ALSO
.Xr dwarf 3 ,
.Xr dwarf_get_cu_die_offset_given_cu_header_offset 3 ,
.Xr dwarf_globals_dealloc 3
