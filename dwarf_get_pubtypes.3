.\" Copyright (c) 2011 Kai Wang
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id$
.\"
.Dd February 26, 2011
.Os
.Dt DWARF_GET_PUBTYPES 3
.Sh NAME
.Nm dwarf_get_pubtypes ,
.Nm dwarf_pubtype_die_offset ,
.Nm dwarf_pubtype_cu_offset ,
.Nm dwarf_pubtype_name_offsets ,
.Nm dwarf_pubtypename
.Nd retrieve information from types lookup table
.Sh LIBRARY
.Lb libdwarf
.Sh SYNOPSIS
.In libdwarf.h
.Ft int
.Fo dwarf_get_pubtypes
.Fa "Dwarf_Debug dbg"
.Fa "Dwarf_Type **types"
.Fa "Dwarf_Signed *ntypes"
.Fa "Dwarf_Error *err"
.Fc
.Ft int
.Fo dwarf_pubtype_die_offset
.Fa "Dwarf_Type type"
.Fa "Dwarf_Off *die_offset"
.Fa "Dwarf_Error *err"
.Fc
.Ft int
.Fo dwarf_pubtype_cu_offset
.Fa "Dwarf_Type type"
.Fa "Dwarf_Off *cu_offset"
.Fa "Dwarf_Error *err"
.Fc
.Ft int
.Fo dwarf_pubtype_name_offsets
.Fa "Dwarf_Type type"
.Fa "char **name"
.Fa "Dwarf_Off *die_offset"
.Fa "Dwarf_Off *cu_die_offset"
.Fa "Dwarf_Error *err"
.Fc
.Ft int
.Fo dwarf_pubtypename
.Fa "Dwarf_Type type"
.Fa "char **name"
.Fa "Dwarf_Error *err"
.Fc
.Sh DESCRIPTION
These functions retrieve information about user-defined types from the
lookup tables in the
.Dq ".debug_pubtypes"
DWARF section.
Information about user-defined types are returned using opaque descriptors
of type
.Vt Dwarf_Type .
An application needs to use the functions described below to retrieve
the name and offset information contained in these descriptors.
.Pp
Function
.Fn dwarf_get_pubtypes
retrieves descriptors for all the user-defined types associated with the
DWARF debug context specified by argument
.Ar dbg .
The argument
.Ar types
should point to a location that will be set to a pointer to an array
of
.Vt Dwarf_Type
descriptors.
The argument
.Ar ntypes
should point to a location that will be set to the number of
descriptors returned.
.Pp
The memory area used for the array of
.Vt Dwarf_Type
descriptors returned is owned by the
.Lb libdwarf .
An application should not attempt to directly free this pointer.
Portable code should instead use
.Fn dwarf_pubtypes_dealloc
to indicate that the memory area may be freed.
.Pp
Function
.Fn dwarf_pubtype_die_offset
retrieves the section-relative offset of the debugging information
entry associated with the argument
.Ar type ,
and stores it into the location pointed to by the argument
.Ar die_offset .
.Pp
Function
.Fn dwarf_pubtype_cu_offset
returns the section-relative offset of the compilation unit that
contains the debugging information entry associated with the argument
.Ar type .
Argument
.Ar cu_offset
should point to a location that will hold the returned offset.
.Pp
Function
.Fn dwarf_pubtype_name_offsets
retrieves both the name and the offset of the debugging information
entry for argument
.Ar type .
Argument
.Ar name
should point to a location which will be set to a pointer to a
NUL-terminated string containing the name of the associated debugging
information entry.
Argument
.Ar die_offset
should point to a location which will be set to a section-relative
offset of the associated debugging information entry.
Argument
.Ar cu_die_offset
should point to a location which will be set to a
section-relative offset of the first debugging information entry in
the compilation unit associated with argument
.Ar type .
.Pp
Function
.Fn dwarf_pubtypename
sets the location pointed to by argument
.Ar name
to a pointer to a NUL-terminated string holding the name of the
debugging information entry associated with the argument
.Ar type .
.Ss Error Returns
If argument
.Ar err
is not NULL, these functions will use it to store error information,
in case of an error.
.Sh RETURN VALUES
On success, these functions returns
.Dv DW_DLV_OK .
In case of an error, they return
.Dv DW_DLV_ERROR
and set the argument
.Ar err .
.Sh ERRORS
These functions may fail with the following errors:
.Bl -tag -width ".Bq Er DW_DLE_ARGUMENT"
.It Bq Er DW_DLE_ARGUMENT
One of the arguments
.Va cu_die_offset ,
.Va cu_offset ,
.Va dbg ,
.Va die_offset ,
.Va type ,
.Va types ,
.Va name ,
or
.Va ntypes
was NULL.
.El
.Sh SEE ALSO
.Xr dwarf 3 ,
.Xr dwarf_get_cu_die_offset_given_cu_header_offset 3 ,
.Xr dwarf_pubtypes_dealloc 3
